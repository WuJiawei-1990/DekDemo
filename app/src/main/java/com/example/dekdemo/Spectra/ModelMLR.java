package com.example.dekdemo.Spectra;

/**
 * Created by ChenGang on 2018/12/7.
 */

public class ModelMLR {
    public static final int SelectPixelNum = 24;
    public static final double Intercept = 16.5034;
    public static double[] AbsorbModelData = new double[SelectPixelNum];
    public static double[] MeasureMatrix = new double[SelectPixelNum];
    public static double PreTSS;
    public static String TssToShow = null;
    public static final int[] PixelSelect =
    {
        29, 34, 39, 46, 60, 65, 72, 75, 78, 82, 87, 98, 104, 114,
                118, 125, 130, 133, 138, 143, 147, 149, 153, 159
    };
    public static final double[] RegCoefficient =
    {
        -30.54115334, 75.82257054, -85.28939499, 118.4900212, -163.6523162, -355.9011047,
                175.4473995, 165.5978341, 239.1482317, 83.10662799, -144.5360851, 245.5879076, 192.8785344,
                -175.9878151, -152.3604821, -145.9995234, -293.3374122, -112.442895, -63.02677743, 49.48410588,
                164.1551176, 177.9809478, 136.6954632, -99.15486462
    };
    public static final int[] Reference =
            {
                    6295, 8119, 10610, 13344, 16619, 20022, 23522, 27012, 30488, 33480, 36300, 38956, 41219, 43187, 44999, 46662, 48121, 49774, 51407, 53041, 55005, 57144, 59441, 61755, 64245, 66438, 68561,
                    70949, 72732, 74508, 76239, 77684, 79016, 80384, 81935, 83384, 85041, 86676, 88191, 90116, 91701, 93421, 95076, 96445, 98074, 99350, 100660, 101992, 103068, 104351, 105862, 107331, 108667,
                    110450, 112312, 114556, 117095, 119593, 122251, 124839, 127638, 130398, 132819, 135503, 137606, 139620, 141340, 142622, 143643, 144407, 144679, 145126, 145134, 144865, 144652, 144521,
                    144226, 144093, 143937, 143875, 143805, 144062, 144347, 144599, 145034, 145773, 146235, 146769, 147381, 148011, 148519, 148878, 149278, 149506, 149532, 149489, 149374, 149193, 148893, 148199,
                    147700, 147007, 146443, 145737, 145111, 144204, 143631, 142771, 142151, 141602, 140986, 140391, 139797, 139205, 138837, 138274, 137661, 137145, 136278, 135721, 135086, 134277, 133271, 132420,
                    131324, 130449, 129025, 127736, 126472, 125063, 123532, 122051, 120489, 118867, 117299, 115824, 114263, 112689, 111116, 109335, 108193, 106635, 105375, 104002, 102558, 101260, 100152, 98906,
                    97693, 96454, 95284, 94288, 93206, 92041, 91156, 90011, 88927, 87962, 87002, 85900, 84811, 83623, 82487, 81427, 80131, 79082, 77703, 76442, 75148, 73758, 72369, 71067, 69638, 68457, 66882, 65350,
                    63892, 62453, 60961, 59418, 57865, 56257, 54788, 53219, 51805, 50581, 49040, 47613, 46464, 44934, 43753, 42396, 41115, 40057, 38754, 37467, 36346, 35337, 34344, 33263, 32278, 31321, 30163, 29276,
                    28443, 27406, 26821, 25823, 24928, 24209, 23409, 22515, 21847, 21191, 20455, 19812, 19160, 18539, 17891, 17152, 16448, 16058, 15401, 14803, 14215, 13702, 13280, 12843, 12275, 11931, 11331, 10902,
                    10499, 10135, 9734, 9136, 8973, 8521, 8201, 7928, 7684, 7261, 6972, 6876, 6686, 6347, 6087, 5931, 5589, 5578, 5280, 5072, 4876, 4744, 4504, 4370
            };
    public static double PredictTSS(int[] data)
    {
        PreTSS = 0;
        for (int i = 0; i < SelectPixelNum; i++)
        {
            AbsorbModelData[i] = Math.log10((double)Reference[PixelSelect[i]] / ((double)data[PixelSelect[i]] ));
            MeasureMatrix[i] = AbsorbModelData[i] * RegCoefficient[i];
            PreTSS += MeasureMatrix[i];
        }
        PreTSS += Intercept;
        return PreTSS;
    }
}
